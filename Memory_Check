#!/bin/bash
FILE=$( basename %0 ).pid
memory() {
NOW=$( date +%Y%m%d" "%H:%M )
tp=$( ps axo stat,pid,%mem,%cpu,command | sort -nr | head -n 10 )
echo ${tp} > $FILE
echo "" | mutt -a "$FILE" -s "${NOW}Memory Check - Critical" -- ${e}  
}
help() {
echo "Options that need parameters are: Critical(-c), Warning(-w) and Email(-e)"
}
c=-c
w=-w
e=-e
OPTARG=$#
if [ $OPTARG -eq 0] then
  help
fi

while getopts ":c:w:e:" opt; do
case $opt in
  c)
    c=$OPTARG
    echo "-c: $OPTARG"
    ;;
  w)
    w=$OPTARG
    echo "-w: $OPTARG"
    ;;
  e)
    e=$OPTARG
    echo "-e: $OPTARG"
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    help
    exit 2
    ;;
  :)
    echo "Option -$OPTARG requires a parameter" >&2
    exit 1
    ;;
esac
done
shift $((OPTIND-1))

if [ $c -le $w ]
then echo "Critical threshold must not be less than or equal to Warning threshold"
exit 1
fi

um=$( free -m | grep Mem: | awk '{ printf "%d\n", $3*100/$2 }' )

if [$um -ge $c]
  then echo "Memory Usage reach Critical Threshold"
  memcrit
  exit 2
  else if [ $um -ge $w ] && [ $um -le $c ]
    then echo "Memory Usage reach Warning Threshold"
    exit 1
    else if [ $um -lt $w ]
      then echo "Memory Usage at Normal state"
      exit 0
    fi
  fi
fi

